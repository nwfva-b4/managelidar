[{"path":"https://wiesehahn.github.io/managelidar/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Jens Wiesehahn Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://wiesehahn.github.io/managelidar/articles/how-to-use-the-functions.html","id":"about","dir":"Articles","previous_headings":"","what":"About","title":"How to use the functions","text":"package provides helper functions conveniently change extract metadata laz files. makes use lidR lasR packages.","code":"library(managelidar)"},{"path":"https://wiesehahn.github.io/managelidar/articles/how-to-use-the-functions.html","id":"plot-extent","dir":"Articles","previous_headings":"","what":"Plot extent","title":"How to use the functions","text":"Use function plot_extent() plot bounding boxes laz files folder top interactive map (using mapview package).","code":"f <- system.file(\"extdata\", package=\"managelidar\") plot_extent(f)"},{"path":"https://wiesehahn.github.io/managelidar/articles/how-to-use-the-functions.html","id":"get-density","dir":"Articles","previous_headings":"","what":"Get density","title":"How to use the functions","text":"Use function get_density() extract approximate pulse density (first/last-return ) laz files. function header lasfiles read density calculated bounding box data file number first-returns. take account parts bounding box missing data, hence density reflect density calculates e.g. lidR. However, much faster read entire file density approximately entire bounding box point data.","code":"f <- system.file(\"extdata\", package=\"managelidar\") get_density(f) #>                            filename npoints npulses           area #> 1 3dm_32_547_5724_1_ni_20240327.laz    2936    2606 309656.1 [m^2] #> 2 3dm_32_547_5725_1_ni_20240327.laz    3369    1340 347095.0 [m^2] #> 3 3dm_32_548_5724_1_ni_20240327.laz   10000    3426 988760.1 [m^2] #> 4 3dm_32_548_5725_1_ni_20240327.laz   10000    4247 987443.7 [m^2] #>          pointdensity        pulsedensity #> 1 0.009481486 [1/m^2] 0.008415787 [1/m^2] #> 2 0.009706277 [1/m^2] 0.003860615 [1/m^2] #> 3 0.010113677 [1/m^2] 0.003464946 [1/m^2] #> 4 0.010127160 [1/m^2] 0.004301005 [1/m^2]"},{"path":"https://wiesehahn.github.io/managelidar/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jens Wiesehahn. Author, maintainer.","code":""},{"path":"https://wiesehahn.github.io/managelidar/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wiesehahn J (2025). managelidar: Manage Lidar Data Files. R package version 0.0.0.9000, https://github.com/wiesehahn/managelidar.","code":"@Manual{,   title = {managelidar: Manage Lidar Data Files},   author = {Jens Wiesehahn},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://github.com/wiesehahn/managelidar}, }"},{"path":"https://wiesehahn.github.io/managelidar/index.html","id":"managelidar","dir":"","previous_headings":"","what":"Manage Lidar Data Files","title":"Manage Lidar Data Files","text":"goal managelidar facilitate handling management lidar data files (*.las/laz). ’s main purpose convert new incoming data data certain quality standards. , provides functions facilitate quality check incoming ALS data. managelidar makes use functions provided {lidR} {lasR}. functions provide information 3D point cloud files working without reading entire files, require long computations large collections data. Instead, attributes read file header possible.","code":""},{"path":"https://wiesehahn.github.io/managelidar/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Manage Lidar Data Files","text":"can install development version managelidar GitHub : functions depend lasR package (version >= 0.14.1) hosted https://r-lidar.r-universe.dev/lasR, manually install advance :","code":"# install.packages(\"pak\") pak::pkg_install(\"wiesehahn/managelidar\") # Install lasR in R: install.packages(\"lasR\", repos = c(\"https://r-lidar.r-universe.dev\", \"https://cran.r-project.org\"))"},{"path":"https://wiesehahn.github.io/managelidar/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Manage Lidar Data Files","text":"basic function queries spatial extents lidar data files given folder data headers (without reading actual point cloud data). returns dataframe can used data management steps.","code":"library(managelidar) f <- system.file(\"extdata\", package=\"managelidar\") get_extent(f) #>                                file   minx    miny    minz     maxx    maxy #> 1 3dm_32_547_5724_1_ni_20240327.laz 547690 5724000 222.866 547999.7 5725000 #> 2 3dm_32_547_5725_1_ni_20240327.laz 547648 5725000 223.448 547998.1 5725991 #> 3 3dm_32_548_5724_1_ni_20240327.laz 548000 5724000 224.578 548992.0 5724997 #> 4 3dm_32_548_5725_1_ni_20240327.laz 548000 5725000 232.946 548995.4 5725992 #>      maxz #> 1 316.283 #> 2 316.526 #> 3 372.281 #> 4 385.486"},{"path":"https://wiesehahn.github.io/managelidar/reference/check_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Check file names — check_names","title":"Check file names — check_names","text":"Checks file names according ADV standard. File names following schema: prefix_utmzone_minx_miny_tilesize_region_year.laz","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/check_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check file names — check_names","text":"","code":"check_names(   path,   prefix = \"3dm\",   zone = 32,   region = NULL,   year = NULL,   copc = FALSE,   full.names = FALSE,   verbose = FALSE )"},{"path":"https://wiesehahn.github.io/managelidar/reference/check_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check file names — check_names","text":"path path directory contains las/laz files prefix 3 letter character. Naming prefix (defaults \"3dm\") zone 2 digits integer. UTM zone (defaults 32) region 2 letter character. (optional) federal state abbreviation. fetched automatically defined (default). year YYYY. (optional) acquisition year append filename. provided (default) year extracted files. acquisition date points contain datetime GPStime format, otherwise get year file header, processing date definition. copc Whether file expected Cloud Optimized Point Cloud (.copc.laz) full.names Whether return full file paths just filenames (default) Whether return full file path just file names (default)","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/check_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check file names — check_names","text":"data.frame attributes name_is, name_should, correct","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/check_names.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check file names — check_names","text":"(e.g. 3dm_32_547_5724_1_ni_2024.laz)","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/check_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check file names — check_names","text":"","code":"f <- system.file(\"extdata\", package = \"managelidar\") check_names(f) #> Error in loadNamespace(x): there is no package called ‘lasR’"},{"path":"https://wiesehahn.github.io/managelidar/reference/get_crs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Coordinate Reference System of LAS files — get_crs","title":"Get the Coordinate Reference System of LAS files — get_crs","text":"Get Coordinate Reference System LAS files","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/get_crs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Coordinate Reference System of LAS files — get_crs","text":"","code":"get_crs(path, full.names = FALSE)"},{"path":"https://wiesehahn.github.io/managelidar/reference/get_crs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Coordinate Reference System of LAS files — get_crs","text":"path path LAS file (.las/.laz/.copc), directory contains LAS files, Virtual Point Cloud (.vpc) referencing LAS files. full.names Whether return full file paths just filenames (default) Whether return full file path just file name (default)","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/get_crs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Coordinate Reference System of LAS files — get_crs","text":"data.frame attributes filename crs (EPSG)","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/get_crs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the Coordinate Reference System of LAS files — get_crs","text":"","code":"f <- system.file(\"extdata\", package=\"managelidar\") get_crs(f) #> Warning: This LAS object stores the CRS as WKT. 0 returned; use 'wkt()' instead. #> Warning: This LAS object stores the CRS as WKT. 0 returned; use 'wkt()' instead. #> Warning: This LAS object stores the CRS as WKT. 0 returned; use 'wkt()' instead. #> Warning: This LAS object stores the CRS as WKT. 0 returned; use 'wkt()' instead. #>                                                            filename   crs #> 3dm_32_547_5724_1_ni_20240327.laz 3dm_32_547_5724_1_ni_20240327.laz 25832 #> 3dm_32_547_5725_1_ni_20240327.laz 3dm_32_547_5725_1_ni_20240327.laz 25832 #> 3dm_32_548_5724_1_ni_20240327.laz 3dm_32_548_5724_1_ni_20240327.laz 25832 #> 3dm_32_548_5725_1_ni_20240327.laz 3dm_32_548_5725_1_ni_20240327.laz 25832"},{"path":"https://wiesehahn.github.io/managelidar/reference/get_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data in a standardized format and structure — get_data","title":"Get data in a standardized format and structure — get_data","text":"function copies data one folder another folder, ensuring certain data formating folder structure. CRS set, points sorted, files compressed, files renamed according ADV standard, files ordered folders acquisition date campaign, VPC created files spatially indexed COPC.","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/get_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data in a standardized format and structure — get_data","text":"","code":"get_data(   origin,   destination,   campaign,   origin_recurse = FALSE,   prefix = \"3dm\",   zone = 32,   region = NULL,   year = NULL,   verbose = FALSE )"},{"path":"https://wiesehahn.github.io/managelidar/reference/get_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get data in a standardized format and structure — get_data","text":"origin path. path directory contains las/laz files destination path. directory processed files copied subfolders (year/campaign) created campaign character. Name project campaign data acquisition. origin_recurse boolean. files subfolder included? prefix 3 letter character. Naming prefix (defaults \"3dm\") zone 2 digits integer. UTM zone (defaults 32) region 2 letter character. (optional) federal state abbreviation. fetched automatically defined (default). year YYYY. (optional) acquisition year append filename. provided (default) year extracted files. acquisition date points contain datetime GPStime format, otherwise get year file header, processing date definition.","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/get_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get data in a standardized format and structure — get_data","text":"structured copy input lidar data","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/get_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get data in a standardized format and structure — get_data","text":"","code":"if (FALSE) { # \\dontrun{ f <- system.file(\"extdata\", package = \"managelidar\") get_data(f, tempdir(), \"landesbefliegung\") } # }"},{"path":"https://wiesehahn.github.io/managelidar/reference/get_datetime.html","id":null,"dir":"Reference","previous_headings":"","what":"Get acquisition datetime from point cloud — get_datetime","title":"Get acquisition datetime from point cloud — get_datetime","text":"get_datetime() calculates earliest latest acquisition datetime point cloud files.","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/get_datetime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get acquisition datetime from point cloud — get_datetime","text":"","code":"get_datetime(path, full.names = FALSE, verbose = FALSE)"},{"path":"https://wiesehahn.github.io/managelidar/reference/get_datetime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get acquisition datetime from point cloud — get_datetime","text":"path path file (.las/.laz/.copc), directory contains files, virtual point cloud (.vpc) referencing files. full.names Whether return full file paths just filenames (default) Whether return full file path just file name (default)","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/get_datetime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get acquisition datetime from point cloud — get_datetime","text":"data.frame attributes filename, datetime_min datetime_max","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/get_datetime.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get acquisition datetime from point cloud — get_datetime","text":"function requires entire point cloud read! Thus takes potentially long processing time, especially applied entire folders large files. Unfortunately possible derive exact acquisition date newer (>= LAS 1.3) point cloud data, acquisition date encoded adjusted standard GPS time. Otherwise, additional information GPSweek necessary.","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/get_datetime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get acquisition datetime from point cloud — get_datetime","text":"","code":"f <- system.file(\"extdata\", package = \"managelidar\") get_datetime(f) #>                                                                                                                                                                                                                                                                                                                                         #>                            filename        datetime_min        datetime_max #> 1 3dm_32_547_5724_1_ni_20240327.laz 2024-03-27 08:23:06 2024-03-27 08:29:25 #> 2 3dm_32_547_5725_1_ni_20240327.laz 2024-03-27 08:25:48 2024-03-27 08:32:28 #> 3 3dm_32_548_5724_1_ni_20240327.laz 2024-03-27 08:23:05 2024-03-27 08:36:29 #> 4 3dm_32_548_5725_1_ni_20240327.laz 2024-03-27 08:29:22 2024-03-27 08:40:51"},{"path":"https://wiesehahn.github.io/managelidar/reference/get_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the approximate point and pulse density of LAS files — get_density","title":"Get the approximate point and pulse density of LAS files — get_density","text":"get_density() calculates approximate average point pulse (first/last-return ) density LAS files.","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/get_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the approximate point and pulse density of LAS files — get_density","text":"","code":"get_density(path, full.names = FALSE)"},{"path":"https://wiesehahn.github.io/managelidar/reference/get_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the approximate point and pulse density of LAS files — get_density","text":"path path LAS file (.las/.laz/.copc), directory contains LAS files, Virtual Point Cloud (.vpc) referencing LAS files. full.names Whether return full file paths just filenames (default) Whether return full file path just file name (default)","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/get_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the approximate point and pulse density of LAS files — get_density","text":"data.frame attributes filename, npoints, npulses, area, pointdensity pulsedensity","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/get_density.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the approximate point and pulse density of LAS files — get_density","text":"function header LAS files read density calculated based bounding box data file number points first-returns. take account parts bounding box missing data, hence density reflect density calculates e.g. lidR. However, much faster read entire file density approximately entire bounding box point data.","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/get_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the approximate point and pulse density of LAS files — get_density","text":"","code":"f <- system.file(\"extdata\", package = \"managelidar\") get_density(f) #>                            filename npoints npulses           area #> 1 3dm_32_547_5724_1_ni_20240327.laz    2936    2606 309656.1 [m^2] #> 2 3dm_32_547_5725_1_ni_20240327.laz    3369    1340 347095.0 [m^2] #> 3 3dm_32_548_5724_1_ni_20240327.laz   10000    3426 988760.1 [m^2] #> 4 3dm_32_548_5725_1_ni_20240327.laz   10000    4247 987443.7 [m^2] #>          pointdensity        pulsedensity #> 1 0.009481486 [1/m^2] 0.008415787 [1/m^2] #> 2 0.009706277 [1/m^2] 0.003860615 [1/m^2] #> 3 0.010113677 [1/m^2] 0.003464946 [1/m^2] #> 4 0.010127160 [1/m^2] 0.004301005 [1/m^2]"},{"path":"https://wiesehahn.github.io/managelidar/reference/get_extent.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the spatial extent of LAS files — get_extent","title":"Get the spatial extent of LAS files — get_extent","text":"get_extent uses min max values spatial extent defined header lasfiles.","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/get_extent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the spatial extent of LAS files — get_extent","text":"","code":"get_extent(path, as_sf = FALSE, full.names = FALSE)"},{"path":"https://wiesehahn.github.io/managelidar/reference/get_extent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the spatial extent of LAS files — get_extent","text":"path path path file (.las/.laz/.copc), directory contains files, virtual point cloud (.vpc) referencing files. as_sf Whether return dataframe spatial features full.names Whether return full file paths just filenames (default) Whether return full file path just file name (default)","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/get_extent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the spatial extent of LAS files — get_extent","text":"data.frame attributes filename, xmin, xmax, ymin ymax","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/get_extent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the spatial extent of LAS files — get_extent","text":"","code":"f <- system.file(\"extdata\", package = \"managelidar\") get_extent(f) #> [1] \"Using directory to build temporary Virtual Point Cloud\" #> Error in loadNamespace(x): there is no package called ‘lasR’"},{"path":"https://wiesehahn.github.io/managelidar/reference/get_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Fileheader (Metadata) from LAS files — get_header","title":"Get the Fileheader (Metadata) from LAS files — get_header","text":"Provides simple wrapper read metadata included fileheader LAS files.","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/get_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Fileheader (Metadata) from LAS files — get_header","text":"","code":"get_header(path, full.names = FALSE, verbose = FALSE)"},{"path":"https://wiesehahn.github.io/managelidar/reference/get_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Fileheader (Metadata) from LAS files — get_header","text":"path path LAS file (.las/.laz/.copc), directory contains LAS files, Virtual Point Cloud (.vpc) referencing LAS files. full.names Whether return full file paths just filenames (default) Whether return full file path just file name (default)","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/get_header.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Fileheader (Metadata) from LAS files — get_header","text":"named list LASheaders","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/get_header.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the Fileheader (Metadata) from LAS files — get_header","text":"","code":"f <- system.file(\"extdata\", package = \"managelidar\") get_header(f) #> $`3dm_32_547_5724_1_ni_20240327.laz` #> $`3dm_32_547_5724_1_ni_20240327.laz`$filename #> [1] \"3dm_32_547_5724_1_ni_20240327.laz\" #>  #> $`3dm_32_547_5724_1_ni_20240327.laz`$header #> File signature:           LASF  #> File source ID:           0  #> Global encoding: #>  - GPS Time Type: Standard GPS Time  #>  - Synthetic Return Numbers: no  #>  - Well Know Text: CRS is WKT  #>  - Aggregate Model: false  #> Project ID - GUID:        00000000-0000-0000-0000-000000000000  #> Version:                  1.4 #> System identifier:          #> Generating software:      TerraScan  #> File creation d/y:        123/2024 #> header size:              375  #> Offset to point data:     2822  #> Num. var. length record:  3  #> Point data format:        7  #> Point data record length: 42  #> Num. of point records:    2936  #> Num. of points by return: 2606 127 127 63 12 1 0 0 0 0 0 0 0 0 0  #> Scale factor X Y Z:       0.001 0.001 0.001  #> Offset X Y Z:             2e+06 6500000 0  #> min X Y Z:                547690 5724000 222.866  #> max X Y Z:                547999.7 5725000 316.283  #> Variable Length Records (VLR): #>    Variable Length Record 1 of 3  #>        Description:   #>        Tags: #>           Key 3072 value 25832  #>    Variable Length Record 2 of 3  #>        Description:   #>        WKT OGC COORDINATE SYSTEM: PROJCRS[\"ETRS89 / UTM zone 32N\",BASEGEOGCRS[\"ETRS89\",ENSEMBLE[\"Europea [...] (truncated) #>    Variable Length Record 3 of 3  #>        Description: RIEGL Extra Bytes  #>        Extra Bytes Description: #>           Amplitude: Echo signal amplitude [dB] #>           Reflectance: Echo signal reflectance [dB] #>           Deviation: Pulse shape deviation #> Extended Variable Length Records (EVLR):  void #>  #>  #> $`3dm_32_547_5725_1_ni_20240327.laz` #> $`3dm_32_547_5725_1_ni_20240327.laz`$filename #> [1] \"3dm_32_547_5725_1_ni_20240327.laz\" #>  #> $`3dm_32_547_5725_1_ni_20240327.laz`$header #> File signature:           LASF  #> File source ID:           0  #> Global encoding: #>  - GPS Time Type: Standard GPS Time  #>  - Synthetic Return Numbers: no  #>  - Well Know Text: CRS is WKT  #>  - Aggregate Model: false  #> Project ID - GUID:        00000000-0000-0000-0000-000000000000  #> Version:                  1.4 #> System identifier:          #> Generating software:      TerraScan  #> File creation d/y:        123/2024 #> header size:              375  #> Offset to point data:     2822  #> Num. var. length record:  3  #> Point data format:        7  #> Point data record length: 42  #> Num. of point records:    3369  #> Num. of points by return: 1340 534 748 584 162 1 0 0 0 0 0 0 0 0 0  #> Scale factor X Y Z:       0.001 0.001 0.001  #> Offset X Y Z:             2e+06 6500000 0  #> min X Y Z:                547648 5725000 223.448  #> max X Y Z:                547998.1 5725991 316.526  #> Variable Length Records (VLR): #>    Variable Length Record 1 of 3  #>        Description:   #>        Tags: #>           Key 3072 value 25832  #>    Variable Length Record 2 of 3  #>        Description:   #>        WKT OGC COORDINATE SYSTEM: PROJCRS[\"ETRS89 / UTM zone 32N\",BASEGEOGCRS[\"ETRS89\",ENSEMBLE[\"Europea [...] (truncated) #>    Variable Length Record 3 of 3  #>        Description: RIEGL Extra Bytes  #>        Extra Bytes Description: #>           Amplitude: Echo signal amplitude [dB] #>           Reflectance: Echo signal reflectance [dB] #>           Deviation: Pulse shape deviation #> Extended Variable Length Records (EVLR):  void #>  #>  #> $`3dm_32_548_5724_1_ni_20240327.laz` #> $`3dm_32_548_5724_1_ni_20240327.laz`$filename #> [1] \"3dm_32_548_5724_1_ni_20240327.laz\" #>  #> $`3dm_32_548_5724_1_ni_20240327.laz`$header #> File signature:           LASF  #> File source ID:           0  #> Global encoding: #>  - GPS Time Type: Standard GPS Time  #>  - Synthetic Return Numbers: no  #>  - Well Know Text: CRS is WKT  #>  - Aggregate Model: false  #> Project ID - GUID:        00000000-0000-0000-0000-000000000000  #> Version:                  1.4 #> System identifier:          #> Generating software:      TerraScan  #> File creation d/y:        123/2024 #> header size:              375  #> Offset to point data:     2822  #> Num. var. length record:  3  #> Point data format:        7  #> Point data record length: 42  #> Num. of point records:    10000  #> Num. of points by return: 3426 1998 2228 1755 558 33 2 0 0 0 0 0 0 0 0  #> Scale factor X Y Z:       0.001 0.001 0.001  #> Offset X Y Z:             2e+06 6500000 0  #> min X Y Z:                548000 5724000 224.578  #> max X Y Z:                548992 5724997 372.281  #> Variable Length Records (VLR): #>    Variable Length Record 1 of 3  #>        Description:   #>        Tags: #>           Key 3072 value 25832  #>    Variable Length Record 2 of 3  #>        Description:   #>        WKT OGC COORDINATE SYSTEM: PROJCRS[\"ETRS89 / UTM zone 32N\",BASEGEOGCRS[\"ETRS89\",ENSEMBLE[\"Europea [...] (truncated) #>    Variable Length Record 3 of 3  #>        Description: RIEGL Extra Bytes  #>        Extra Bytes Description: #>           Amplitude: Echo signal amplitude [dB] #>           Reflectance: Echo signal reflectance [dB] #>           Deviation: Pulse shape deviation #> Extended Variable Length Records (EVLR):  void #>  #>  #> $`3dm_32_548_5725_1_ni_20240327.laz` #> $`3dm_32_548_5725_1_ni_20240327.laz`$filename #> [1] \"3dm_32_548_5725_1_ni_20240327.laz\" #>  #> $`3dm_32_548_5725_1_ni_20240327.laz`$header #> File signature:           LASF  #> File source ID:           0  #> Global encoding: #>  - GPS Time Type: Standard GPS Time  #>  - Synthetic Return Numbers: no  #>  - Well Know Text: CRS is WKT  #>  - Aggregate Model: false  #> Project ID - GUID:        00000000-0000-0000-0000-000000000000  #> Version:                  1.4 #> System identifier:          #> Generating software:      TerraScan  #> File creation d/y:        123/2024 #> header size:              375  #> Offset to point data:     2822  #> Num. var. length record:  3  #> Point data format:        7  #> Point data record length: 42  #> Num. of point records:    10000  #> Num. of points by return: 4247 1657 2105 1482 489 17 2 1 0 0 0 0 0 0 0  #> Scale factor X Y Z:       0.001 0.001 0.001  #> Offset X Y Z:             2e+06 6500000 0  #> min X Y Z:                548000 5725000 232.946  #> max X Y Z:                548995.4 5725992 385.486  #> Variable Length Records (VLR): #>    Variable Length Record 1 of 3  #>        Description:   #>        Tags: #>           Key 3072 value 25832  #>    Variable Length Record 2 of 3  #>        Description:   #>        WKT OGC COORDINATE SYSTEM: PROJCRS[\"ETRS89 / UTM zone 32N\",BASEGEOGCRS[\"ETRS89\",ENSEMBLE[\"Europea [...] (truncated) #>    Variable Length Record 3 of 3  #>        Description: RIEGL Extra Bytes  #>        Extra Bytes Description: #>           Amplitude: Echo signal amplitude [dB] #>           Reflectance: Echo signal reflectance [dB] #>           Deviation: Pulse shape deviation #> Extended Variable Length Records (EVLR):  void #>  #>"},{"path":"https://wiesehahn.github.io/managelidar/reference/get_intersection.html","id":null,"dir":"Reference","previous_headings":"","what":"Get intersecting LAS files — get_intersection","title":"Get intersecting LAS files — get_intersection","text":"Get intersecting LAS files Get intersecting LAS files","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/get_intersection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get intersecting LAS files — get_intersection","text":"","code":"get_intersection(   path1,   path2,   mode = \"intersects\",   as_sf = FALSE,   full.names = FALSE )  get_intersection(   path1,   path2,   mode = \"intersects\",   as_sf = FALSE,   full.names = FALSE )"},{"path":"https://wiesehahn.github.io/managelidar/reference/get_intersection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get intersecting LAS files — get_intersection","text":"path1 path LAS file (.las/.laz/.copc), directory contains LAS files, Virtual Point Cloud (.vpc) referencing LAS files. path2 path LAS file (.las/.laz/.copc), directory contains LAS files, Virtual Point Cloud (.vpc) referencing LAS files. mode Either 'intersects' (default) 'equals'. as_sf (boolean) Whether return dataframe spatials features data.frame (default). full.names Whether return full file paths just filenames (default)","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/get_intersection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get intersecting LAS files — get_intersection","text":"spatial features data.frame attributes filename, xmin, xmax, ymin, ymax alls files path1 intersect files path2 ('intersects') extent files path2 ('equals'). list 2 data.frames attribute filename intersecting equal file extents path1 path2, optionally spatial features data.frame.","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/get_intersection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get intersecting LAS files — get_intersection","text":"","code":"folder <- system.file(\"extdata\", package = \"managelidar\") file <- list.files(folder, full.names = T)[1] get_intersection(folder, file) #> [1] \"Using directory to build temporary Virtual Point Cloud\" #> Error in loadNamespace(x): there is no package called ‘lasR’ folder <- system.file(\"extdata\", package = \"managelidar\") file <- list.files(folder, full.names = T)[1] get_intersection(folder, file) #> [1] \"Using directory to build temporary Virtual Point Cloud\" #> Error in loadNamespace(x): there is no package called ‘lasR’"},{"path":"https://wiesehahn.github.io/managelidar/reference/get_lasversion.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Version of LAS files — get_lasversion","title":"Get the Version of LAS files — get_lasversion","text":"Get Version LAS files","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/get_lasversion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Version of LAS files — get_lasversion","text":"","code":"get_lasversion(path, full.names = FALSE)"},{"path":"https://wiesehahn.github.io/managelidar/reference/get_lasversion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Version of LAS files — get_lasversion","text":"path path LAS file directory contains LAS files full.names Whether return full file paths just filenames (default) Whether return full file path just file name (default)","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/get_lasversion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Version of LAS files — get_lasversion","text":"data.frame attributes filename lasversion (Major.Minor)","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/get_lasversion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the Version of LAS files — get_lasversion","text":"","code":"f <- system.file(\"extdata\", package=\"managelidar\") get_lasversion(f) #>                            filename lasversion #> 1 3dm_32_547_5724_1_ni_20240327.laz        1.4 #> 2 3dm_32_547_5725_1_ni_20240327.laz        1.4 #> 3 3dm_32_548_5724_1_ni_20240327.laz        1.4 #> 4 3dm_32_548_5725_1_ni_20240327.laz        1.4"},{"path":"https://wiesehahn.github.io/managelidar/reference/get_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get file names — get_names","title":"Get file names — get_names","text":"Simply get vector names LAS files (*.las, *.laz, *.laz.copc) folder.","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/get_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get file names — get_names","text":"","code":"get_names(path, full.names = FALSE)"},{"path":"https://wiesehahn.github.io/managelidar/reference/get_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get file names — get_names","text":"path path LAS file, VPC file, directory contains LAS files full.names Whether return full file paths just filenames (default) Whether return full file path just file name (default)","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/get_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get file names — get_names","text":"vector filenames","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/get_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get file names — get_names","text":"","code":"f <- system.file(\"extdata\", package = \"managelidar\") get_names(f) #> [1] \"3dm_32_547_5724_1_ni_20240327.laz\" \"3dm_32_547_5725_1_ni_20240327.laz\" #> [3] \"3dm_32_548_5724_1_ni_20240327.laz\" \"3dm_32_548_5725_1_ni_20240327.laz\""},{"path":"https://wiesehahn.github.io/managelidar/reference/get_penetration.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the pulse penetration ratio of LAS files — get_penetration","title":"Get the pulse penetration ratio of LAS files — get_penetration","text":"get_penetration() calculates approximate pulse penetration ratio LAS files.","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/get_penetration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the pulse penetration ratio of LAS files — get_penetration","text":"","code":"get_penetration(path, full.names = FALSE)"},{"path":"https://wiesehahn.github.io/managelidar/reference/get_penetration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the pulse penetration ratio of LAS files — get_penetration","text":"path path LAS file (.las/.laz/.copc), directory contains LAS files, Virtual Point Cloud (.vpc) referencing LAS files. full.names Whether return full file paths just filenames (default) Whether return full file path just file name (default)","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/get_penetration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the pulse penetration ratio of LAS files — get_penetration","text":"data.frame attributes filename, single, two, three, four, five, six multiple","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/get_penetration.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the pulse penetration ratio of LAS files — get_penetration","text":"function header lasfiles read. calculates ratio pulses single return , two returns, three returns, four returns, five returns, six returns convenience multiple returns (two ). Beware exact especially small files since pulses can split borders.","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/get_penetration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the pulse penetration ratio of LAS files — get_penetration","text":"","code":"f <- system.file(\"extdata\", package=\"managelidar\") get_penetration(f) #>                            filename single    two three  four  five   six #> 1 3dm_32_547_5724_1_ni_20240327.laz  0.951  0.000 0.025 0.020 0.004 0.000 #> 2 3dm_32_547_5725_1_ni_20240327.laz  0.601 -0.160 0.122 0.315 0.120 0.001 #> 3 3dm_32_548_5724_1_ni_20240327.laz  0.417 -0.067 0.138 0.349 0.153 0.009 #> 4 3dm_32_548_5725_1_ni_20240327.laz  0.610 -0.105 0.147 0.234 0.111 0.004 #>   multiple #> 1    0.049 #> 2    0.399 #> 3    0.583 #> 4    0.390"},{"path":"https://wiesehahn.github.io/managelidar/reference/get_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the point cloud summary of LAS files — get_summary","title":"Get the point cloud summary of LAS files — get_summary","text":"get_summary derives information LAS files, number points per class histogram distribution z intensity values.","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/get_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the point cloud summary of LAS files — get_summary","text":"","code":"get_summary(path, full.names = FALSE)"},{"path":"https://wiesehahn.github.io/managelidar/reference/get_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the point cloud summary of LAS files — get_summary","text":"path path LAS file (.las/.laz/.copc), directory contains LAS files, Virtual Point Cloud (.vpc) referencing LAS files. full.names Whether return full file paths just filenames (default) Whether return full file path just file name (default).","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/get_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the point cloud summary of LAS files — get_summary","text":"named list summary information (npoints, nsingle, nwithheld, nsynthetic, npoints_per_return, npoints_per_class, z_histogram, i_histogram, crs, epsg)","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/get_summary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the point cloud summary of LAS files — get_summary","text":"function needs read actual point cloud data! speed processing function reads just sample points, slower just reading header information much faster reading entire file. results thus valid subsample points necessarily reflect entire file.","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/get_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the point cloud summary of LAS files — get_summary","text":"","code":"f <- system.file(\"extdata\", package = \"managelidar\") get_summary(f) #> Error in loadNamespace(x): there is no package called ‘lasR’"},{"path":"https://wiesehahn.github.io/managelidar/reference/is_classified.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if LAS files are classified — is_classified","title":"Check if LAS files are classified — is_classified","text":"is_classified derives information point classification","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/is_classified.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if LAS files are classified — is_classified","text":"","code":"is_classified(path, full.names = FALSE, add_classes = FALSE)"},{"path":"https://wiesehahn.github.io/managelidar/reference/is_classified.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if LAS files are classified — is_classified","text":"path path LAS file (.las/.laz/.copc), directory contains LAS files, Virtual Point Cloud (.vpc) referencing LAS files. full.names Whether return full file paths just filenames (default) Whether return full file paths just filenames (default) add_classes Whether add list present classes (default)","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/is_classified.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if LAS files are classified — is_classified","text":"data.frame returning filename, classified optionally classes","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/is_classified.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if LAS files are classified — is_classified","text":"function needs read actual point cloud data! speed processing function reads just sample points, slower just reading header information much faster reading entire file. results thus valid subsample points necessarily reflect entire file.","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/is_classified.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if LAS files are classified — is_classified","text":"","code":"f <- system.file(\"extdata\", package = \"managelidar\") is_classified(f) #> Error in loadNamespace(x): there is no package called ‘lasR’"},{"path":"https://wiesehahn.github.io/managelidar/reference/laz_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Laz files — laz_files","title":"Laz files — laz_files","text":"4 neighbouring laz tiles ALS campaign, thinned 2m grid","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/laz_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Laz files — laz_files","text":"","code":"laz_files"},{"path":"https://wiesehahn.github.io/managelidar/reference/laz_files.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Laz files — laz_files","text":"LAZ files","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/laz_files.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Laz files — laz_files","text":"flight campaign \"Solling 2024\" (local data)","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/managelidar-package.html","id":null,"dir":"Reference","previous_headings":"","what":"managelidar: Manage Lidar Data Files — managelidar-package","title":"managelidar: Manage Lidar Data Files — managelidar-package","text":"goal managelidar facilitate handling lidar data files.","code":""},{"path":[]},{"path":"https://wiesehahn.github.io/managelidar/reference/managelidar-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"managelidar: Manage Lidar Data Files — managelidar-package","text":"Maintainer: Jens Wiesehahn wiesehahn.jens@gmail.com","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/plot_extent.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the extent of LAS files — plot_extent","title":"Plot the extent of LAS files — plot_extent","text":"plot_extent plots spatial extent LAS files interactive map.","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/plot_extent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the extent of LAS files — plot_extent","text":"","code":"plot_extent(path)"},{"path":"https://wiesehahn.github.io/managelidar/reference/plot_extent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the extent of LAS files — plot_extent","text":"path path LAS file (.las/.laz/.copc), directory contains LAS files, Virtual Point Cloud (.vpc) referencing LAS files.","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/plot_extent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the extent of LAS files — plot_extent","text":"interactive map viewer","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/plot_extent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the extent of LAS files — plot_extent","text":"","code":"f <- system.file(\"extdata\", package = \"managelidar\") plot_extent(f) #> [1] \"Using directory to build temporary Virtual Point Cloud\" #> Error in loadNamespace(x): there is no package called ‘lasR’"},{"path":"https://wiesehahn.github.io/managelidar/reference/set_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Set file names — set_names","title":"Set file names — set_names","text":"Renames files according schema validated check_files(). according ADV standard.","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/set_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set file names — set_names","text":"","code":"set_names(   path,   prefix = \"3dm\",   zone = 32,   region = NULL,   year = NULL,   copc = FALSE,   verbose = FALSE )"},{"path":"https://wiesehahn.github.io/managelidar/reference/set_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set file names — set_names","text":"path path directory contains las/laz files prefix 3 letter character. Naming prefix (defaults \"3dm\") zone 2 digits integer. UTM zone (defaults 32) region 2 letter character. (optional) federal state abbreviation. fetched automatically Null. year YYYY. (optional) acquisition year append filename. provided year extracted files. acquisition date points contain datetime GPStime format, otherwise get year file header, processing date definition.","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/set_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set file names — set_names","text":"Renamed files","code":""},{"path":"https://wiesehahn.github.io/managelidar/reference/set_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set file names — set_names","text":"","code":"f <- system.file(\"extdata/3dm_32_547_5724_1_ni_20240327.laz\", package = \"managelidar\") copy <- tempfile(fileext = \".laz\") file.copy(f, copy) #> [1] TRUE set_names(copy) #> Error in loadNamespace(x): there is no package called ‘lasR’"}]
